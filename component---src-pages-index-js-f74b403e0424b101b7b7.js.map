{"version":3,"file":"component---src-pages-index-js-f74b403e0424b101b7b7.js","mappings":"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","sources":["webpack://michaeltamaki.github.io/../src/image-utils.ts","webpack://michaeltamaki.github.io/../src/components/hooks.ts","webpack://michaeltamaki.github.io/../src/components/layout-wrapper.tsx","webpack://michaeltamaki.github.io/../src/components/picture.tsx","webpack://michaeltamaki.github.io/../src/components/placeholder.tsx","webpack://michaeltamaki.github.io/../src/components/main-image.tsx","webpack://michaeltamaki.github.io/../src/components/gatsby-image.server.tsx","webpack://michaeltamaki.github.io/../src/components/gatsby-image.browser.tsx","webpack://michaeltamaki.github.io/../src/components/static-image.server.tsx","webpack://michaeltamaki.github.io/../src/components/static-image.tsx","webpack://michaeltamaki.github.io/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://michaeltamaki.github.io/./src/components/util/Head.js","webpack://michaeltamaki.github.io/./src/components/landing/PortraitImg.js","webpack://michaeltamaki.github.io/./src/components/util/Icons.js","webpack://michaeltamaki.github.io/./src/components/util/SocialLink.js","webpack://michaeltamaki.github.io/./src/components/util/SocialLinkList.js","webpack://michaeltamaki.github.io/./src/components/landing/Landing.js","webpack://michaeltamaki.github.io/./src/components/summary/Summary.js","webpack://michaeltamaki.github.io/./src/components/experiences/constants.js","webpack://michaeltamaki.github.io/./src/components/experiences/SkillPill.js","webpack://michaeltamaki.github.io/./src/components/experiences/ExperienceCard.js","webpack://michaeltamaki.github.io/./src/components/experiences/Experiences.js","webpack://michaeltamaki.github.io/./src/components/footer/Footer.js","webpack://michaeltamaki.github.io/./src/pages/index.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","/**\n * Component to populate <head> with meta data\n */\nimport React from \"react\"\n\nfunction Head() {\n  return (\n    <>\n      <html lang=\"en\" />\n      <title>Michael Tamaki</title>\n      <meta name=\"description\" content=\"Michael Tamaki personal website\" />\n      <meta name=\"og:title\" content=\"Michael Tamaki\" />\n      <meta name=\"og:description\" content=\"Michael Tamaki personal website\" />\n      <meta name=\"og:type\" content=\"website\" />\n    </>\n  )\n}\n\nexport default Head\n","import React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nfunction PortraitImg() {\n  return (\n    <StaticImage\n      src=\"../../images/portrait.JPG\"\n      className=\"rounded-lg\"\n      alt=\"Michael Tamaki portrait\"\n      placeholder=\"blurred\"\n      layout=\"constrained\"\n      width={128}\n      height={128}\n      quality={100}\n    />\n  )\n}\n\nexport default PortraitImg\n","import React from \"react\"\n\n// https://github.com/simple-icons/simple-icons/blob/develop/icons/github.svg\nexport const GithubIcon = () => (\n  <svg\n    role=\"img\"\n    className=\"fill-current\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <title>GitHub icon</title>\n    <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n  </svg>\n)\n\n// https://github.com/simple-icons/simple-icons/blob/develop/icons/linkedin.svg\nexport const LinkedInIcon = () => (\n  <svg\n    role=\"img\"\n    className=\"fill-current\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <title>LinkedIn icon</title>\n    <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\" />\n  </svg>\n)\n\n// https://github.com/tailwindlabs/heroicons/blob/master/src/outline/external-link.svg\nexport const ExternalLinkIcon = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    className=\"stroke-current inline-block w-4 h-4\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M10 6H6C4.89543 6 4 6.89543 4 8V18C4 19.1046 4.89543 20 6 20H16C17.1046 20 18 19.1046 18 18V14M14 4H20M20 4V10M20 4L10 14\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n)\n\n// https://tailwindcss.com/components/forms#custom-select\nexport const SelectIcon = () => (\n  <svg\n    className=\"fill-current h-4 w-4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n  >\n    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n  </svg>\n)\n\n// https://undraw.co\nexport const WebDeveloperIcon = () => (\n  <svg\n    id=\"ade8c9af-7e2e-4eda-b5c8-b06129257226\"\n    data-name=\"Layer 1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"w-full h-full\"\n    width=\"1076.06371\"\n    height=\"755.2279\"\n    viewBox=\"0 0 1076.06371 755.2279\"\n  >\n    <title>Web Developer</title>\n    <path\n      d=\"M926.11393,774.80937c-6.98452,26.59789-31.459,43.21966-31.459,43.21966s-13.15033-26.50193-6.16581-53.09982,31.459-43.21966,31.459-43.21966S933.09845,748.21148,926.11393,774.80937Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <path\n      d=\"M915.52,769.18266c-19.56251,19.32716-21.75117,48.83128-21.75117,48.83128s29.52845-1.83141,49.091-21.15858,21.75116-48.83129,21.75116-48.83129S935.08248,749.85549,915.52,769.18266Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#276749\"\n    />\n    <path\n      d=\"M206.70221,674.19438h36.8414l90.78774-35.52564s64.47245-26.31528,59.20939,23.68376-14.47341,117.103-14.47341,117.103-28.94681-13.15764-44.736-9.21035-5.26306-80.26162-5.26306-80.26162-128.9449,61.84092-140.78678,53.94634-14.4734-63.15669-14.4734-63.15669Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#2f2e41\"\n    />\n    <path\n      d=\"M206.70221,674.19438h36.8414l90.78774-35.52564s64.47245-26.31528,59.20939,23.68376-14.47341,117.103-14.47341,117.103-28.94681-13.15764-44.736-9.21035-5.26306-80.26162-5.26306-80.26162-128.9449,61.84092-140.78678,53.94634-14.4734-63.15669-14.4734-63.15669Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M264.74607,558.82036l44.58576,64.05921L413.2772,709.72s96.0508,22.368,82.89315,38.15717S402.75109,732.088,402.75109,732.088s-119.73455-86.84044-123.68184-93.41927S231.70174,570.249,231.70174,570.249Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#a0616a\"\n    />\n    <path\n      d=\"M264.74607,558.82036l44.58576,64.05921L413.2772,709.72s96.0508,22.368,82.89315,38.15717S402.75109,732.088,402.75109,732.088s-119.73455-86.84044-123.68184-93.41927S231.70174,570.249,231.70174,570.249Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M238.28056,507.09232l28.94681,56.57786s-6.57882,27.63105-17.10494,30.26258-55.26209-34.20987-55.26209-34.20987Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#d0cde1\"\n    />\n    <path\n      d=\"M238.28056,507.09232l28.94681,56.57786s-6.57882,27.63105-17.10494,30.26258-55.26209-34.20987-55.26209-34.20987Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M591.4193,644.90044,599.97,680.172a2.20311,2.20311,0,0,1-.04279,1.19048L561.13956,802.57374a2.20306,2.20306,0,0,1-4.28722-.42269l-5.36581-47.21916a2.203,2.203,0,0,1,.09431-.93128L587.1836,644.737A2.20306,2.20306,0,0,1,591.4193,644.90044Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#2f2e41\"\n    />\n    <polygon\n      points=\"526.306 575.493 534.2 605.756 499.99 716.28 492.096 682.07 526.306 575.493\"\n      fill=\"#f2f2f2\"\n    />\n    <path\n      d=\"M415.90873,812.34963c1.31577,3.94729,136.83949-1.31577,138.15525-2.63153a28.56086,28.56086,0,0,0,2.89462-5.26306c1.2369-2.63153,2.36844-5.26306,2.36844-5.26306L554.064,756.58753l-134.208-4.76306s-3.35527,36.10458-4.03949,52.63057C415.64564,808.626,415.64564,811.56012,415.90873,812.34963Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#2f2e41\"\n    />\n    <polygon\n      points=\"474.991 689.965 477.622 726.806 418.413 726.806 418.413 689.965 474.991 689.965\"\n      opacity=\"0.1\"\n    />\n    <polygon\n      points=\"398.677 701.806 399.03 701.736 397.361 717.596 364.467 717.596 364.467 701.806 398.677 701.806\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M415.90873,812.34963c1.31577,3.94729,136.83949-1.31577,138.15525-2.63153a28.56086,28.56086,0,0,0,2.89462-5.26306H415.81654C415.64564,808.626,415.64564,811.56012,415.90873,812.34963Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      opacity=\"0.1\"\n    />\n    <circle cx=\"196.04888\" cy=\"357.07618\" r=\"59.20939\" fill=\"#a0616a\" />\n    <path\n      d=\"M254.06973,482.0928s-19.73647,34.20987-23.68376,52.63057-59.20939-36.8414-59.20939-36.8414l-7.2367-19.07858s51.97268-24.34164,48.02539-44.07811S254.06973,482.0928,254.06973,482.0928Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#a0616a\"\n    />\n    <path\n      d=\"M264.59584,584.72241l53.94634,71.05127,128.9449,96.05079s93.41926,19.73647,72.367,34.20987-81.57738-13.15764-81.57738-13.15764S308.01606,703.14119,280.385,674.19438s-78.94585-77.63009-78.94585-77.63009Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#a0616a\"\n    />\n    <path\n      d=\"M192.22881,695.24661,208.018,720.24613l94.2313-29.64581c20.67581-6.50474,43.34783-4.11124,61.68676,7.44229,16.44706,10.36164,26.97317,26.80869,3.28941,51.15033-47.36751,48.68328-78.94585,22.368-78.94585,22.368S129.07212,846.5595,102.75684,809.7181s-27.631-55.2621-27.631-55.2621S176.43964,691.29931,192.22881,695.24661Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#2f2e41\"\n    />\n    <path\n      d=\"M389.59345,782.08705s42.10445,27.63105-7.89459,40.78869-86.84044-5.26306-86.84044-5.26306-43.42022,0-43.42022-22.368,14.47341-24.99952,14.47341-24.99952l44.736,6.57882S364.59393,762.35059,389.59345,782.08705Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#d0cde1\"\n    />\n    <path\n      d=\"M306.58925,414.56777c4.03,1.79653,8.02621,3.92291,12.40755,4.4444s9.37055-1.00819,11.44376-4.903c1.11982-2.10373,1.24778-4.57826,1.3-6.96089.15849-7.22517-.36406-15.03591-4.94264-20.6274-2.9139-3.55854-7.16747-5.80183-10.18374-9.274-2.161-2.48761-3.59924-5.50284-5.14786-8.41141-5.866-11.01725-14.55128-21.60559-26.62195-24.78175-5.04041-1.32629-10.328-1.26157-15.53945-1.188l-30.39725.42884c-4.91906.0694-9.914.15005-14.623,1.57383-9.784,2.95823-16.90779,11.18591-23.43216,19.05427-4.88119,5.88668-9.7753,11.83425-13.43862,18.54685a65.07888,65.07888,0,0,0-7.71423,31.88675,29.83261,29.83261,0,0,0,1.09276,8.43732,46.82177,46.82177,0,0,0,3.31627,7.28423c5.70049,11.19673,9.08523,25.18219,2.66543,35.98258,11.15187-4.55542,22.18591-10.52835,29.54232-20.0677,3.29093-4.26748,5.87181-9.26316,10.25758-12.39472s11.532-3.40321,14.34592,1.1928a12.85719,12.85719,0,0,1,1.4508,6.02242c.20551,3.44983.1999,7.03258,1.66258,10.16374s4.94686,5.65758,8.27337,4.72061c5.72869-1.61358,5.18009-10.406,9.59251-14.4,3.35094-3.03318,8.52074-2.45334,12.82574-3.83026,5.01582-1.60428,8.77937-5.94959,10.92379-10.75939,1.63-3.65594,1.60645-13.223,4.69084-15.20283C294.20755,409.02219,303.00386,412.96943,306.58925,414.56777Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#2f2e41\"\n    />\n    <path\n      d=\"M159.2397,472.56207a15.61579,15.61579,0,0,1,8.128.02069c8.44618,2.26753,27.38021,8.27035,31.43989,17.40462,5.26306,11.84188,23.68376,30.26258,23.68376,30.26258s24.99952,24.99952,19.73646,42.10446-24.99952,36.8414-24.99952,36.8414,5.26306,81.57738-21.05223,102.62961-36.8414,6.57882-36.8414,26.31528S77.75732,809.7181,61.96814,771.56094c0,0,7.89459-71.05128,5.26306-96.0508C64.63762,650.87116,68.43448,497.14537,159.2397,472.56207Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#d0cde1\"\n    />\n    <path\n      d=\"M201.43916,505.77655s80.26162,59.2094,65.78821,84.20892c0,0-48.68328,23.68375-59.20939,22.368s-51.31481-47.36751-61.84092-51.31481S130.38789,486.04009,201.43916,505.77655Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#d0cde1\"\n    />\n    <circle cx=\"498.06371\" cy=\"237.45791\" r=\"65\" fill=\"#f2f2f2\" />\n    <path\n      d=\"M1096.8978,225.42666H732.64912V149.20722H1096.8978ZM734.25374,223.822h361.03944v-73.0102H734.25374Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <rect\n      x=\"645.80936\"\n      y=\"92.06506\"\n      width=\"362.64407\"\n      height=\"74.61482\"\n      fill=\"#276749\"\n    />\n    <circle cx=\"416.56486\" cy=\"15.24386\" r=\"5.61624\" fill=\"#276749\" />\n    <circle cx=\"435.8203\" cy=\"15.24386\" r=\"5.61624\" fill=\"#276749\" />\n    <circle cx=\"455.07573\" cy=\"15.24386\" r=\"5.61624\" fill=\"#276749\" />\n    <path\n      d=\"M1138.03186,512.05187H462.48693V72.38605h675.54493Zm-673.94031-1.60462h672.33569V73.99067H464.09155Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <rect\n      x=\"401.3211\"\n      y=\"24.33804\"\n      width=\"673.9403\"\n      height=\"1.60462\"\n      fill=\"#3f3d56\"\n    />\n    <path\n      d=\"M480.13775,91.64149a6.41848,6.41848,0,1,1,6.41848-6.41848A6.42592,6.42592,0,0,1,480.13775,91.64149Zm0-11.23234a4.81386,4.81386,0,1,0,4.81386,4.81386A4.81945,4.81945,0,0,0,480.13775,80.40915Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <path\n      d=\"M499.39319,91.64149a6.41848,6.41848,0,1,1,6.41848-6.41848A6.42592,6.42592,0,0,1,499.39319,91.64149Zm0-11.23234a4.81386,4.81386,0,1,0,4.81386,4.81386A4.81945,4.81945,0,0,0,499.39319,80.40915Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <path\n      d=\"M518.64863,91.64149A6.41848,6.41848,0,1,1,525.0671,85.223,6.42593,6.42593,0,0,1,518.64863,91.64149Zm0-11.23234a4.81386,4.81386,0,1,0,4.81385,4.81386A4.81946,4.81946,0,0,0,518.64863,80.40915Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <rect\n      x=\"612.10922\"\n      y=\"25.14035\"\n      width=\"1.60462\"\n      height=\"414.34565\"\n      fill=\"#3f3d56\"\n    />\n    <rect\n      x=\"688.73293\"\n      y=\"228.85889\"\n      width=\"117.93955\"\n      height=\"16.0462\"\n      fill=\"#f2f2f2\"\n    />\n    <rect\n      x=\"874.06652\"\n      y=\"228.85889\"\n      width=\"117.93955\"\n      height=\"16.0462\"\n      fill=\"#f2f2f2\"\n    />\n    <path\n      d=\"M875.86143,310.07035H756.31726V292.41953H875.86143Zm-117.93955-1.60462H874.25681V294.02415H757.92188Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <rect\n      x=\"688.73293\"\n      y=\"353.21693\"\n      width=\"117.93955\"\n      height=\"16.0462\"\n      fill=\"#f2f2f2\"\n    />\n    <path\n      d=\"M875.86143,434.42838H756.31726V416.77757H875.86143Zm-117.93955-1.60462H874.25681V418.38219H757.92188Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <rect\n      x=\"689.13409\"\n      y=\"289.43329\"\n      width=\"303.27314\"\n      height=\"16.0462\"\n      fill=\"#f2f2f2\"\n    />\n    <path\n      d=\"M1061.59617,372.24937H756.71841V354.59855h304.87776ZM758.323,370.64475h301.66852V356.20317H758.323Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <path\n      d=\"M1061.195,310.07035H941.65084V292.41953H1061.195Zm-117.93955-1.60462h116.33493V294.02415H943.25546Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <path\n      d=\"M571.03186,357.844a66,66,0,1,1,66-66A66.07468,66.07468,0,0,1,571.03186,357.844Zm0-130a64,64,0,1,0,64,64A64.0727,64.0727,0,0,0,571.03186,227.844Z\"\n      transform=\"translate(-61.96814 -72.38605)\"\n      fill=\"#3f3d56\"\n    />\n    <rect x=\"748.06371\" y=\"744.45791\" width=\"283\" height=\"2\" fill=\"#3f3d56\" />\n  </svg>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nfunction SocialLink({ href, Icon, text, isLightText }) {\n  return (\n    <a\n      className={`${\n        isLightText ? \"hover:text-green-400\" : \"hover:text-green-800\"\n      } inline-block`}\n      href={href}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <span className=\"w-6 mr-2 inline-block align-middle\">\n        <Icon />\n      </span>\n      <span className=\"inline-block align-middle\">{text}</span>\n    </a>\n  )\n}\n\nSocialLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  Icon: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  isLightText: PropTypes.bool,\n}\n\nexport default SocialLink\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { GithubIcon, LinkedInIcon } from \"./Icons\"\nimport SocialLink from \"./SocialLink\"\n\nfunction SocialLinkList({ isLightText }) {\n  return (\n    <div className=\"space-y-1\">\n      <div>\n        <SocialLink\n          href=\"https://github.com/MichaelTamaki\"\n          Icon={GithubIcon}\n          text=\"Github\"\n          isLightText={isLightText}\n        />\n      </div>\n      <div>\n        <SocialLink\n          href=\"https://www.linkedin.com/in/michaeltamaki\"\n          Icon={LinkedInIcon}\n          text=\"LinkedIn\"\n          isLightText={isLightText}\n        />\n      </div>\n    </div>\n  )\n}\n\nSocialLinkList.propTypes = {\n  isLightText: PropTypes.bool,\n}\n\nexport default SocialLinkList\n","import React from \"react\"\nimport PortraitImg from \"./PortraitImg\"\nimport SocialLinkList from \"../util/SocialLinkList\"\n\nfunction Landing() {\n  return (\n    <section className=\"bg-gradient-to-br from-green-500 to-green-900\">\n      <div className=\"py-16 md:py-32 landing-bg\">\n        <div className=\"container text-center mx-auto\">\n          <div className=\"bg-gray-100 rounded-lg p-6 sm:p-8 shadow-2xl inline-flex flex-col sm:flex-row\">\n            <div className=\"w-32 mx-auto mb-4 sm:mb-0 sm:mr-8 flex-initial\">\n              <PortraitImg />\n            </div>\n            <div className=\"flex-1 flex flex-col justify-between text-left\">\n              <div className=\"mb-3\">\n                <h1 className=\"text-2xl text-gray-900\">Michael Tamaki</h1>\n                <h2 className=\"text-green-800\">\n                  Front-end / Full Stack Engineer\n                </h2>\n              </div>\n              <SocialLinkList />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Landing\n","import React from \"react\"\nimport { WebDeveloperIcon } from \"../util/Icons\"\n\nfunction Summary() {\n  return (\n    <div className=\"container mx-auto my-16 sm:my-32 px-3 flex flex-col sm:flex-row items-center content-center\">\n      <div className=\"flex-auto sm:w-2/3 pr-3\">\n        <h2 className=\"text-2xl\">\n          Hey, I&apos;m Michael! I&apos;m a front-end/full stack web developer\n          at Okta. My team builds developer tools that localize Okta&apos;s\n          apps. Previously, I studied Computer Science at UC Berkeley. I look\n          forward to connecting with you!\n        </h2>\n      </div>\n      <div className=\"flex-auto w-2/3 mt-8 sm:w-1/3 sm:mt-0\">\n        <WebDeveloperIcon />\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","export const SKILLS = {\n  REACT: \"React\",\n  VUE: \"Vue\",\n  TYPESCRIPT: \"Typescript\",\n  D3: \"D3.js\",\n  BROWSER_EXTENSION: \"Browser Extension\",\n  JAVA: \"Java\",\n  PYTHON: \"Python\",\n  WORDPRESS: \"Wordpress\",\n  INFRASTRUCTURE: \"Infrastructure\",\n}\n\nexport const SORT_BY_KEYS = {\n  DEFAULT: \"Default\",\n  ALPHABETICAL_ASC: \"Name A-Z\",\n  ALPHABETICAL_DSC: \"Name Z-A\",\n}\n\nexport const SORT_BY_FNS = {}\nSORT_BY_FNS[SORT_BY_KEYS.DEFAULT] = (card1, card2) =>\n  card1.defaultOrder - card2.defaultOrder\nSORT_BY_FNS[SORT_BY_KEYS.ALPHABETICAL_ASC] = (card1, card2) =>\n  card1.title.localeCompare(card2.title)\nSORT_BY_FNS[SORT_BY_KEYS.ALPHABETICAL_DSC] = (card1, card2) =>\n  card2.title.localeCompare(card1.title)\n\nexport const CARD_DATA = [\n  {\n    title: \"Okta, Inc.\",\n    link: \"https://www.okta.com\",\n    positions: [\n      { name: \"Senior Software Engineer\", date: \"November '21 to Present\" },\n      { name: \"Software Engineer\", date: \"August '19 to November '21\" },\n      { name: \"Software Engineer Intern\", date: \"Summer '18\" },\n    ],\n    description:\n      \"Front-end and full stack work on the end-user dashboard, browser plugins, and admin rate limit dashboard.\",\n    skills: [\n      SKILLS.REACT,\n      SKILLS.TYPESCRIPT,\n      SKILLS.D3,\n      SKILLS.BROWSER_EXTENSION,\n      SKILLS.JAVA,\n    ],\n    defaultOrder: 0,\n  },\n  {\n    title: \"Cal Band\",\n    link: \"https://www.calband.org\",\n    positions: [\n      { name: \"Computer Coordinator\", date: \"Spring '18 to Spring '19\" },\n      { name: \"Computer Committee\", date: \"Spring '17 to Spring '18\" },\n    ],\n    description:\n      \"Automated the student-run marching band's logistical tasks with an internal Django website. Lead and managed a team of web developers.\",\n    skills: [SKILLS.PYTHON, SKILLS.WORDPRESS, SKILLS.INFRASTRUCTURE],\n    defaultOrder: 1,\n  },\n  {\n    title: \"The Daily Californian\",\n    link: \"https://www.dailycal.org\",\n    positions: [\n      { name: \"Online Manager\", date: \"Summer '18 to Spring '19\" },\n      { name: \"Online Team\", date: \"Fall '17 to Spring '18\" },\n    ],\n    description:\n      \"Improved and updated the student-run newspaper's website and servers. Lead and managed a team of web developers.\",\n    skills: [SKILLS.WORDPRESS, SKILLS.INFRASTRUCTURE],\n    defaultOrder: 2,\n  },\n  {\n    title: \"CalChart\",\n    link: \"https://github.com/calband/calchart-redesign\",\n    description: \"Web application for plotting Cal Band marchers on the field.\",\n    skills: [SKILLS.VUE, SKILLS.TYPESCRIPT],\n    defaultOrder: 3,\n  },\n  {\n    title: \"Personal Website\",\n    link: \"https://github.com/MichaelTamaki/michaeltamaki.github.io\",\n    description: \"Website for personal brand.\",\n    skills: [SKILLS.REACT],\n    defaultOrder: 4,\n  },\n]\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nfunction SkillPill({ skill, selectedFilters, toggleFilter, ...props }) {\n  const ariaDescribedBy = props[\"aria-describedby\"]\n  const skillEnabled = selectedFilters.includes(skill)\n  return (\n    <button\n      className={`${skillEnabled ? \"bg-green-300\" : \"bg-gray-300\"}\n      inline-block hover:bg-green-400 rounded-full mr-2 px-3 py-1 text-sm font-semibold`}\n      role=\"checkbox\"\n      aria-checked={skillEnabled}\n      aria-describedby={ariaDescribedBy}\n      onClick={() => toggleFilter(skill)}\n    >\n      {skill}\n    </button>\n  )\n}\n\nSkillPill.propTypes = {\n  skill: PropTypes.string.isRequired,\n  selectedFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  toggleFilter: PropTypes.func.isRequired,\n  \"aria-describedby\": PropTypes.string,\n}\n\nexport default SkillPill\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { ExternalLinkIcon } from \"../util/Icons\"\nimport SkillPill from \"./SkillPill\"\n\nfunction ExperienceCard({\n  title,\n  link,\n  positions,\n  description,\n  skills,\n  selectedFilters,\n  toggleFilter,\n}) {\n  return (\n    <div className=\"shadow-xl rounded p-6 bg-white flex flex-col justify-between\">\n      <div className=\"space-y-1\">\n        <h4 className=\"text-xl\">{title}</h4>\n        {positions && (\n          <div>\n            {positions.map(({ name, date }) => (\n              <p key={name}>\n                <span className=\"font-bold italic text-green-800\">{name}</span>{\" \"}\n                {date}\n              </p>\n            ))}\n          </div>\n        )}\n        <p>{description}</p>\n        {link && (\n          <p>\n            <a\n              href={link}\n              className=\"font-bold hover:text-green-800 break-words\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {link} <ExternalLinkIcon />\n            </a>\n          </p>\n        )}\n      </div>\n      <div className=\"mt-3 space-y-2\">\n        {skills.map((skill) => (\n          <SkillPill\n            key={skill}\n            skill={skill}\n            selectedFilters={selectedFilters}\n            toggleFilter={toggleFilter}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nExperienceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  positions: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      date: PropTypes.string,\n    }),\n  ),\n  description: PropTypes.string.isRequired,\n  skills: PropTypes.arrayOf(PropTypes.string).isRequired,\n  selectedFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  toggleFilter: PropTypes.func.isRequired,\n}\n\nexport default ExperienceCard\n","import React, { useState, useEffect } from \"react\"\nimport { SKILLS, CARD_DATA, SORT_BY_KEYS, SORT_BY_FNS } from \"./constants\"\nimport SkillPill from \"./SkillPill\"\nimport ExperienceCard from \"./ExperienceCard\"\nimport { SelectIcon } from \"../util/Icons\"\n\nfunction Experiences() {\n  const [selectedCards, setSelectedCards] = useState(CARD_DATA)\n  const [selectedFilters, setSelectedFilters] = useState([])\n  const [selectedSort, setSelectedSort] = useState(SORT_BY_KEYS.DEFAULT)\n\n  useEffect(() => {\n    let cards = CARD_DATA.slice()\n    if (selectedFilters.length !== 0) {\n      cards = cards.filter((card) =>\n        selectedFilters.some((skill) => card.skills.includes(skill)),\n      )\n    }\n    cards.sort(SORT_BY_FNS[selectedSort])\n    setSelectedCards(cards)\n  }, [selectedFilters, selectedSort])\n\n  const toggleFilter = (skill) => {\n    const filterIndex = selectedFilters.indexOf(skill)\n    if (filterIndex !== -1) {\n      selectedFilters.splice(filterIndex, 1)\n    } else {\n      selectedFilters.push(skill)\n    }\n    setSelectedFilters(selectedFilters.slice())\n  }\n\n  const onSortChange = (event) => {\n    setSelectedSort(event.target.value)\n  }\n\n  return (\n    <div className=\"container px-3 mt-16 mx-auto\">\n      <h2 className=\"text-2xl mb-3\">Experiences and Projects</h2>\n      <div className=\"space-y-2 mb-2\">\n        <h3 id=\"filter-by-label\" className=\"inline-block mr-2\">\n          Filter by skills\n        </h3>\n        {Object.values(SKILLS).map((skill) => (\n          <SkillPill\n            key={skill}\n            aria-describedby=\"filter-by-label\"\n            skill={skill}\n            selectedFilters={selectedFilters}\n            toggleFilter={toggleFilter}\n          />\n        ))}\n      </div>\n      <div>\n        <h3 id=\"sort-by-label\" className=\"inline-block mr-2\">\n          Sort by\n        </h3>\n        <div className=\"inline-block relative\">\n          <select\n            aria-labelledby=\"sort-by-label\"\n            value={selectedSort}\n            onChange={onSortChange}\n            onBlur={onSortChange}\n            className=\"block appearance-none bg-white border border-gray-400 hover:border-gray-500 px-2 py-1 pr-8 rounded shadow leading-tight focus:outline-none focus:ring\"\n          >\n            {Object.values(SORT_BY_KEYS).map((key) => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n          <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n            <SelectIcon />\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-6 grid gap-4 grid-cols-1 md:grid-cols-2 xl:grid-cols-3\">\n        {selectedCards.map((cardData) => (\n          <ExperienceCard\n            {...cardData}\n            key={cardData.title}\n            selectedFilters={selectedFilters}\n            toggleFilter={toggleFilter}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Experiences\n","import React from \"react\"\nimport SocialLinkList from \"../util/SocialLinkList\"\n\nfunction Footer() {\n  return (\n    <footer className=\"mt-16 py-16 px-3 bg-gray-800 text-gray-400\">\n      <div className=\"container mx-auto\">\n        <h2 className=\"mb-6\">Made by Michael Tamaki</h2>\n        <SocialLinkList isLightText={true} />\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport \"./index.css\"\nimport HeadUtil from \"../components/util/Head\"\nimport Landing from \"../components/landing/Landing\"\nimport Summary from \"../components/summary/Summary\"\nimport Experiences from \"../components/experiences/Experiences\"\nimport Footer from \"../components/footer/Footer\"\n\nconst IndexPage = () => (\n  <>\n    <main>\n      <Landing />\n      <Summary />\n      <Experiences />\n    </main>\n    <Footer />\n  </>\n)\n\nexport default IndexPage\n\nexport const Head = HeadUtil\n"],"names":["W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","i","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","length","map","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","lastIndex","m1","charAt","postProcess","_","identifier","module","exports","React","lang","name","content","StaticImage","quality","require","GithubIcon","viewBox","xmlns","LinkedInIcon","ExternalLinkIcon","fill","strokeWidth","strokeLinecap","strokeLinejoin","SelectIcon","WebDeveloperIcon","id","transform","points","cx","cy","_ref","href","Icon","text","isLightText","target","rel","SocialLink","PortraitImg","SocialLinkList","SKILLS","REACT","VUE","TYPESCRIPT","D3","BROWSER_EXTENSION","JAVA","PYTHON","WORDPRESS","INFRASTRUCTURE","SORT_BY_KEYS","DEFAULT","ALPHABETICAL_ASC","ALPHABETICAL_DSC","SORT_BY_FNS","card1","card2","defaultOrder","title","localeCompare","CARD_DATA","link","positions","date","description","skills","skill","selectedFilters","toggleFilter","props","ariaDescribedBy","skillEnabled","includes","onClick","_ref2","SkillPill","selectedCards","setSelectedCards","useState","setSelectedFilters","selectedSort","setSelectedSort","useEffect","cards","card","some","sort","filterIndex","indexOf","splice","push","onSortChange","event","value","Object","values","onChange","onBlur","cardData","ExperienceCard","assign","IndexPage","Landing","Summary","Experiences","Footer","Head","HeadUtil"],"sourceRoot":""}